[{"E:\\RreactRedux\\crud_firebase\\src\\components\\contact.js":"1","E:\\RreactRedux\\crud_firebase\\src\\firebase.js":"2","E:\\RreactRedux\\crud_firebase\\src\\App.js":"3","E:\\RreactRedux\\crud_firebase\\src\\components\\contactForm.js":"4"},{"size":3058,"mtime":1606946066131,"results":"5","hashOfConfig":"6"},{"size":553,"mtime":1606842611834,"results":"7","hashOfConfig":"8"},{"size":296,"mtime":1606838283059,"results":"9","hashOfConfig":"6"},{"size":2981,"mtime":1606945102935,"results":"10","hashOfConfig":"6"},{"filePath":"11","messages":"12","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},"1yagn4u",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"z3n7gn",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\RreactRedux\\crud_firebase\\src\\components\\contact.js",["20","21","22"],"import React,{useEffect,useState} from 'react';\r\nimport ContactForm from './contactForm';\r\nimport firebaseDB from \"../firebase\";\r\nfunction Contact(){\r\n    var [contactObjects, setcontactObjects]=useState(0);\r\n    var [currentId,setCureentId]=useState('')\r\n\r\n    useEffect(()=>{\r\n        firebaseDB.child('contacts').on('value',snapshot=>{\r\n            if(snapshot.val()!=null){\r\n                setcontactObjects({\r\n                    ...snapshot.val()\r\n                })\r\n            } else {\r\n                setcontactObjects({})\r\n            }\r\n        })\r\n    },[])   /// similar to component DidMount\r\n    const addOrEdit = obj=>{\r\n        if(currentId==''){\r\n            firebaseDB.child('contacts').push(obj, err => {\r\n                if (err) {\r\n                    console.log(err)\r\n                } else {\r\n                    setCureentId('')\r\n                }\r\n            })\r\n        }else{\r\n            firebaseDB.child(`contacts/${currentId}`).set(obj, err => {\r\n                if (err) {\r\n                    console.log(err)\r\n                }else{\r\n                    setCureentId('')\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const onDelete=(key)=>{\r\n        if(window.confirm('Are You Sure To Delete This Account')){\r\n            firebaseDB.child(`contacts/${key}`).remove(err => {\r\n                if (err) {\r\n                    console.log(err)\r\n                } else {\r\n                    setCureentId('')\r\n                }\r\n            })\r\n        }\r\n    }\r\n    return(\r\n        <>\r\n        <div className=\"jumbotron jumbotron-fluid\">\r\n            <div className=\"container\">\r\n                <h1 className=\"display-4 text-center\">Contact Register</h1>\r\n            </div>\r\n        </div>\r\n        <div className=\"conatiner\">\r\n        <div className=\"row\">\r\n        <div className=\"col-md-5\">\r\n        <ContactForm {...({addOrEdit,currentId,contactObjects})}/>\r\n        </div>\r\n        <div className=\"col-md-7\">\r\n        <div>\r\n        <table className=\"table table-borderless table-stripped\">\r\n        <thead className=\"thead-light\">\r\n        <tr>\r\n            <th>Full Name</th>\r\n            <th>Mobile</th>     \r\n            <th>Email</th>\r\n            <th>Action</th>                    \r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        {\r\n            Object.keys(contactObjects).map(id=>{\r\n                     return <tr key={id}>\r\n                    <td>{contactObjects[id].fullName}</td>\r\n                    <td>{contactObjects[id].mobile}</td>\r\n                    <td>{contactObjects[id].email}</td>\r\n                    <td>\r\n                             <a onClick={()=> setCureentId(id)}><i className=\"far fa-edit text-warning\"></i></a>\r\n                             <a onClick={()=>onDelete(id)}><i className=\"far fa-trash-alt ml-3 text-danger\"></i></a>\r\n                    </td>\r\n                </tr>\r\n            })\r\n        }\r\n        </tbody>\r\n        </table>\r\n        </div>\r\n        </div>\r\n        </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\nexport default Contact;","E:\\RreactRedux\\crud_firebase\\src\\firebase.js",[],"E:\\RreactRedux\\crud_firebase\\src\\App.js",[],"E:\\RreactRedux\\crud_firebase\\src\\components\\contactForm.js",["23","24","25"],{"ruleId":"26","severity":1,"message":"27","line":20,"column":21,"nodeType":"28","messageId":"29","endLine":20,"endColumn":23},{"ruleId":"30","severity":1,"message":"31","line":81,"column":30,"nodeType":"32","endLine":81,"endColumn":65},{"ruleId":"30","severity":1,"message":"31","line":82,"column":30,"nodeType":"32","endLine":82,"endColumn":60},{"ruleId":"26","severity":1,"message":"27","line":14,"column":28,"nodeType":"28","messageId":"29","endLine":14,"endColumn":30},{"ruleId":"33","severity":1,"message":"34","line":23,"column":7,"nodeType":"35","endLine":23,"endColumn":45,"suggestions":"36"},{"ruleId":"26","severity":1,"message":"27","line":67,"column":68,"nodeType":"28","messageId":"29","endLine":67,"endColumn":70},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'intialFieldValue'. Either include it or remove the dependency array.","ArrayExpression",["37"],{"desc":"38","fix":"39"},"Update the dependencies array to be: [props.currentId, props.contactObjects, intialFieldValue]",{"range":"40","text":"41"},[541,579],"[props.currentId, props.contactObjects, intialFieldValue]"]